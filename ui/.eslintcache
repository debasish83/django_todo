[{"/Users/debasish.das/github/django_todo/ui/src/index.js":"1","/Users/debasish.das/github/django_todo/ui/src/App.js":"2","/Users/debasish.das/github/django_todo/ui/src/reportWebVitals.js":"3"},{"size":500,"mtime":1609375846753,"results":"4","hashOfConfig":"5"},{"size":3077,"mtime":1609407795604,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1609375846754,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"t5efne",{"filePath":"11","messages":"12","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/debasish.das/github/django_todo/ui/src/index.js",[],["17","18"],"/Users/debasish.das/github/django_todo/ui/src/App.js",["19","20"],"import logo from './logo.svg';\nimport './App.css';\n\nimport React, {Component} from 'react';\n\n// result from API saved as const for now\nconst list = [\n    {\n        'id': 1,\n        'title': '1st Item',\n        'description': 'Description here.'\n    },\n    {\n        'id': 2,\n        'title': '2nd Item',\n        'description': 'Another description here.'\n    },\n    {\n        'id': 3,\n        'title': '3rd Item',\n        'description': 'Third description here.'\n    }\n];\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        // initialize todos with empty array\n        this.state = {\n            todos: [],\n            leads: [],\n            loaded: false,\n            placeholder: \"Loading\"\n        };\n    }\n\n    // do an DRF API call whenever the component mounts and\n    // fetch the latest todos from API\n    // use react fetch or axios can be used as well\n    componentDidMount() {\n        fetch(\"http://127.0.0.1:8000/api/leads\")\n            .then(response => {\n                if (response.status > 400) {\n                    return this.setState({placeholder: \"Something went wrong\"});\n                }\n                return response.json()\n            })\n            .then(data => {\n                this.setState(() => {\n                    return {\n                        leads: data,\n                        loaded: true\n                    };\n                });\n            })\n        fetch(\"http://127.0.0.1:8000/api/todos\")\n            .then(response => {\n                if (response.status > 400) {\n                    return this.setState({placeholder: \"Something went wrong\"});\n                }\n                return response.json()\n            })\n            .then(data => {\n                this.setState(() => {\n                    return {\n                        todos: data,\n                        loaded: true\n                    };\n                });\n            })\n        /* await is a blocking call on a API, it's not a good idea\n           use axios or fetch with callbacks\n        try {\n            // use axios\n            const res = await fetch('http://127.0.0.1:8000/api');\n            const todos = await res.json();\n            console.log('fetching the api response')\n            console.log(todos)\n            this.setState({todos});\n        } catch (e) {\n            console.log(e);\n        }*/\n    }\n\n    // For each div use a className to decorate css and also associate an unique\n    // key with it\n    render() {\n        return (\n            <div>\n                {this.state.todos.map(todo => (\n                    <div className={\"todo\"} key={todo.id}>\n                        <h1>{todo.title}</h1>\n                        <span>{todo.description}</span>\n                    </div>\n                    ))}\n                    <ul>\n                        {this.state.leads.map(contact => (\n                            <li key={contact.id}>{contact.name} - {contact.email}</li>\n                        ))}\n                    </ul>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","/Users/debasish.das/github/django_todo/ui/src/reportWebVitals.js",[],["21","22"],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":1,"column":8,"nodeType":"29","messageId":"30","endLine":1,"endColumn":12},{"ruleId":"27","severity":1,"message":"31","line":7,"column":7,"nodeType":"29","messageId":"30","endLine":7,"endColumn":11},{"ruleId":"23","replacedBy":"32"},{"ruleId":"25","replacedBy":"33"},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'list' is assigned a value but never used.",["34"],["35"],"no-global-assign","no-unsafe-negation"]